import java.util.Scanner;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    static String thisStringIsneedeToRecursionISuspect; //naezzelmiafasztcsinaljak,hogy tudjam hasznalni meg egyebkent is mi a faszom ez a lathatosag GRRR

    public static void main(String[] args) {
        App app = new App();
        String binaryConvertedValue;
        thisStringIsneedeToRecursionISuspect = "";
        int originalInt = app.getIntToConvert();
        System.out.println("java calculated value: " + Integer.toBinaryString(originalInt));
        if (0 > originalInt) {
            thisStringIsneedeToRecursionISuspect = "-";
        } else {
            thisStringIsneedeToRecursionISuspect = "";
        }
        app.convertIntegerToBinaryByRemainder(originalInt, 31);
        System.out.println("Brand new method: " + thisStringIsneedeToRecursionISuspect);
    }
    void convertIntegerToBinaryByRemainder(int originalInt, int exponentInMethod) {
        Double twoExponentedDouble = Math.pow(2, exponentInMethod);
        int twoExponent = twoExponentedDouble.intValue();
        if (0 <= exponentInMethod) {
            if (0 < (Math.abs(originalInt) / twoExponent)) {
                thisStringIsneedeToRecursionISuspect += "1";
                originalInt %= twoExponent;
            } else {
                thisStringIsneedeToRecursionISuspect += "0";
            }
            convertIntegerToBinaryByRemainder(originalInt, exponentInMethod - 1);
        }
    }

    public int getIntToConvert() {
        Scanner sc = new Scanner(System.in);
        int i = 0;
        boolean isConversionSuccess = false;
        do {
            System.out.println("What to convert to binary?");
            try {
                i = Integer.valueOf(sc.nextLine());
                isConversionSuccess = true;
            } catch (NumberFormatException e) {
                isConversionSuccess = false;
            }
        } while (!isConversionSuccess);
        return i;
    }
}

